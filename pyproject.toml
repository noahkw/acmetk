[project]
name = "acmetk"
description = "An ACME Broker for Automated Certificate Acquisition in University Environments"
authors = [
    {name = "Noah WÃ¶hler", email = "noah.woehler@gmail.com"},
]
dependencies = [
    "PyYAML",
    "acme",
    "aiohttp",
    "aiohttp_jinja2",
    "alembic",
    "asyncpg",
    "click",
    "cryptography",
    "dnspython",
    "infoblox-client",
    "josepy",
    "psycopg2-binary",
    "sqlalchemy",
    "pydantic-settings",
    "asyncache",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ['version']

[project.urls]
Homepage = "https://acmetk.readthedocs.io"
Repository = "https://github.com/noahkw/acmetk"

[project.optional-dependencies]
infoblox = [
    "infoblox-client",
]
lexicon = [
    "dns-lexicon",
]
[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pdm.dev-dependencies]
tests = [
    "acme-tiny",
    "certbot",
    "trustme",
    "coverage",
    "pytest",
    "pytest-asyncio"
]

[tool.pdm]
plugins = [
    "pdm-autoexport"
]

[[tool.pdm.autoexport]]
filename = "requirements.txt"
groups = ["default","lexicon","infoblox"]

[tool.setuptools]
packages = [
    "acmetk",
    "acmetk.client",
    "acmetk.models",
    "acmetk.plugins",
    "acmetk.server",
]

[tool.setuptools.dynamic]
version = {attr = "acmetk.version.__version__"}

[tool.ruff.lint.pycodestyle]
max-line-length = 120
[tool.ruff]
line-length = 120

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:.* in pyOpenSSL is deprecated.:DeprecationWarning",
    "ignore:Changing state of started or joined application is deprecated:DeprecationWarning",
]

asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "session"

log_cli = "yes"
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
